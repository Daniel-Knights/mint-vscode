{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Mint",
  "scopeName": "source.mint",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#style"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#html"
    },
    {
      "include": "#routes"
    }
  ],
  "repository": {
    "comments": {
      "name": "comment.block.mint",
      "begin": "/\\*",
      "end": "\\*/"
    },
    "html": {
      "begin": "(?<=.*:\\sHtml\\s{)",
      "beginCaptures": {
        "0": {
          "name": "block.open.html.mint"
        }
      },
      "end": ">.*}",
      "endCaptures": {
        "0": {
          "name": "block.close.html.mint"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "match": "<|>|/",
          "name": "punctuation.definition.tag.html.mint"
        },
        {
          "match": "(?<=<|</)[^A-Z|{][a-z]*[^\\s|:|>|/]*",
          "name": "entity.name.tag.block.any.html.mint"
        },
        {
          "match": "(?![A-Z][a-z]*)(?<=::)[^\\s|>|::|\\(]*",
          "name": "entity.name.tag.css.mint"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#strings"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.mint",
          "match": "(?<!\\.|[a-zA-Z0-9])\\b(global|state|encode|decode|for|module|provider|suite|test|parallel|sequence|case|try|catch|next|with|component|property|fun|style|routes|get|connect|exposing|record|store|use|when|if|else|where|enum|using|const|as)\\b(?![a-zA-Z0-9]|\\.|=)"
        },
        {
          "name": "entity.name.class.mint",
          "match": "\\b[A-Z][A-Za-z0-9]*\\b"
        },
        {
          "name": "constant.numeric.mint",
          "match": "\\d[^\\s]*"
        },
        {
          "name": "storage.type.function.arrow.mint",
          "match": "=>"
        },
        {
          "name": "punctuation.accessor.mint",
          "match": "\\."
        },
        {
          "name": "constant.language.boolean.mint",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "keyword.operator.expression.of.mint",
          "match": "(?<!\\.)\\bof\\b"
        },
        {
          "contentName": "entity.name.function.mint",
          "begin": "(?<=fun)\\s",
          "end": "\\s\\(|:|{$"
        },
        {
          "name": "entity.name.function.mint",
          "match": "\\b(?<=[^A-Za-z]|\\.|\\s)[a-z][a-zA-Z0-9]*\\b(?=\\()"
        },
        {
          "name": "support.type.property-name.mint",
          "match": "(?<!^)\\b[a-z][a-zA-Z0-9\\-]*\\b"
        }
      ]
    },
    "routes": {
      "begin": "(?<=routes\\s{)",
      "beginCaptures": {
        "0": {
          "name": "block.open.routes.mint"
        }
      },
      "end": "\\G\\s*}",
      "endCaptures": {
        "0": {
          "name": "block.close.routes.mint"
        }
      },
      "patterns": [
        {
          "match": "(/|\\*)[^{]*",
          "name": "string.route.name.mint"
        },
        {
          "include": "#keywords"
        }
      ]
    },
    "scss": {
      "patterns": [
        {
          "include": "#style-nesting"
        },
        {
          "include": "source.css#pseudo-classes"
        },
        {
          "include": "source.css#pseudo-elements"
        },
        {
          "include": "source.css.scss#general"
        },
        {
          "include": "source.css.scss#selectors"
        },
        {
          "include": "source.css.scss#properties"
        },
        {
          "include": "source.css.scss#at_rule_import"
        },
        {
          "include": "source.css.scss#at_rule_media"
        },
        {
          "include": "source.css.scss#at_rule_charset"
        },
        {
          "include": "source.css.scss#at_rule_namespace"
        },
        {
          "include": "source.css.scss#at_rule_fontface"
        },
        {
          "include": "source.css.scss#at_rule_page"
        },
        {
          "include": "source.css.scss#at_rule_keyframes"
        },
        {
          "include": "source.css.scss#at_rule_supports"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.mint",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.mint",
          "match": "\\\\."
        },
        {
          "match": "#{",
          "name": "punctuation.definition.template-expression.begin.mint"
        },
        {
          "match": "}",
          "name": "punctuation.definition.template-expression.end.mint"
        },
        {
          "begin": "(?<=#{)",
          "end": "(?=})",
          "patterns": [
            {
              "name": "meta.embedded.line.mint",
              "match": "\\."
            },
            {
              "include": "#keywords"
            }
          ]
        }
      ]
    },
    "style": {
      "begin": "(?<=style\\s)(?:[^{]*\\s)({)",
      "beginCaptures": {
        "0": {
          "name": "block.open.style.mint"
        }
      },
      "patterns": [
        {
          "begin": "if\\s?\\([^\\)]*\\)\\s?{",
          "beginCaptures": {
            "0": {
              "name": "block.open.if.mint"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "block.close.if.mint"
            }
          },
          "name": "expression.group.mint",
          "patterns": [
            {
              "include": "#scss"
            }
          ]
        },
        {
          "begin": "case\\s?\\([^\\)]*\\)\\s?{",
          "patterns": [
            {
              "include": "#keywords"
            },
            {
              "include": "#scss"
            }
          ],
          "name": "expression.group.mint",
          "beginCaptures": {
            "0": {
              "name": "block.open.case.mint"
            }
          },
          "end": "}",
          "endCaptures": {
            "0": {
              "name": "block.close.case.mint"
            }
          }
        },
        {
          "include": "#scss"
        }
      ],
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "block.close.style.mint"
        }
      },
      "name": "expression.group.mint"
    },
    "style-nesting": {
      "begin": "{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.property-list.begin.bracket.curly.scss.mint"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.property-list.end.bracket.curly.scss.mint"
        }
      },
      "name": "meta.property-list.scss.mint",
      "patterns": [
        {
          "include": "#scss"
        }
      ]
    }
  }
}
